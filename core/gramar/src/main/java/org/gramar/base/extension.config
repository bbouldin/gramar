<extension>

	<id>org.gramar.base</id>
	<label>Base Gramar extension</label>
	<provider>gramar.org</provider>

	<tags>
	
		<tag  name="addElement" 	handler="org.gramar.base.tag.AddElementTag"		controlTag="false" />
		<tag  name="addTextElement"	handler="org.gramar.base.tag.AddTextElementTag"	controlTag="false" />
		<tag  name="choose" 		handler="org.gramar.base.tag.ChooseTag"			controlTag="true" />
		<tag  name="copyElement"	handler="org.gramar.base.tag.CopyElementTag"	controlTag="false" />
		<tag  name="copyFile" 		handler="org.gramar.base.tag.CopyFileTag"		controlTag="false" />
		<tag  name="dump"		 	handler="org.gramar.base.tag.DumpTag"			controlTag="false" />
		<tag  name="file" 			handler="org.gramar.base.tag.FileTag"			controlTag="false" />
		<tag  name="folder" 		handler="org.gramar.base.tag.FolderTag"			controlTag="false" />
		<tag  name="flow" 			handler="org.gramar.base.tag.FlowTag"			controlTag="false" />
		<tag  name="flowContent" 	handler="org.gramar.base.tag.FlowContentTag"	controlTag="false" />
		<tag  name="formatNow"		handler="org.gramar.base.tag.FormatNowTag"		controlTag="false" />
		<tag  name="get" 			handler="org.gramar.base.tag.GetTag"  			controlTag="false" />
		<tag  name="if"			 	handler="org.gramar.base.tag.IfTag"				controlTag="true" />
		<tag  name="include"		handler="org.gramar.base.tag.IncludeTag"		controlTag="true" />
		<tag  name="initialCode"	handler="org.gramar.base.tag.InitialCodeTag"	controlTag="false" />
		<tag  name="iterate" 		handler="org.gramar.base.tag.IterateTag"		controlTag="true" />
		<tag  name="load"			handler="org.gramar.base.tag.LoadTag"			controlTag="true" />
		<tag  name="loadContent"	handler="org.gramar.base.tag.LoadContentTag"	controlTag="true" />
		<tag  name="log"			handler="org.gramar.base.tag.LogTag"			controlTag="false" />
		<tag  name="milliseconds"	handler="org.gramar.base.tag.MillisecondsTag"	controlTag="true" />
		<tag  name="otherwise" 		handler="org.gramar.base.tag.OtherwiseTag"		controlTag="true" />
		<tag  name="project" 		handler="org.gramar.base.tag.ProjectTag"		controlTag="false" />
		<tag  name="removeElement"	handler="org.gramar.base.tag.RemoveElementTag"	controlTag="false" />
		<tag  name="set" 			handler="org.gramar.base.tag.SetTag"  			controlTag="false" />
		<tag  name="setVariable"	handler="org.gramar.base.tag.SetVariableTag"	controlTag="true" />
		<tag  name="stringTokens"	handler="org.gramar.base.tag.StringTokensTag"	controlTag="true" />
		<tag  name="userRegion"		handler="org.gramar.base.tag.UserRegionTag"		controlTag="false" />
		<tag  name="when" 			handler="org.gramar.base.tag.WhenTag"			controlTag="true" />
		
	</tags>

	<functions>
	
		<function name="camelCase" parms="1" variableNumber="false" impl="org.gramar.base.function.CamelCaseFunction" />
		<function name="cardinality" parms="1" variableNumber="false" impl="org.gramar.base.function.CardinalityFunction" />
		<function name="className" parms="1" variableNumber="false" impl="org.gramar.base.function.ClassNameFunction" />
		<function name="isVariableDefined" parms="1" variableNumber="false" impl="org.gramar.base.function.IsVariableDefinedFunction" />
		<function name="lowercaseFirst"  parms="1" variableNumber="false" impl="org.gramar.base.function.LowercaseFirstFunction"/>
		<function name="lower-case"  parms="1" variableNumber="false" impl="org.gramar.base.function.LowercaseFunction"/>
		<function name="packageName"  parms="1" variableNumber="false" impl="org.gramar.base.function.PackageNameFunction"/>
		<function name="singleToken" parms="1" variableNumber="false" impl="org.gramar.base.function.SingleTokenFunction" />
		<function name="sort"  parms="2" variableNumber="true" impl="org.gramar.base.function.SortFunction"/>
		<function name="unique"  parms="2" variableNumber="false" impl="org.gramar.base.function.UniqueFunction"/>
		<function name="uppercaseFirst"  parms="1" variableNumber="false" impl="org.gramar.base.function.UppercaseFirstFunction"/>
		<function name="upper-case"  parms="1" variableNumber="false" impl="org.gramar.base.function.UppercaseFunction"/>
	
	</functions>

	<filestores>
	
		<filestore id="org.gramar.filestore.ConsoleFileStore"  	impl="org.gramar.filestore.ConsoleFileStore"/>
		<filestore id="org.gramar.filestore.LocalFileStore"  	impl="org.gramar.filestore.LocalFileStore"/>
		<filestore id="org.gramar.filestore.MemoryFileStore"  	impl="org.gramar.filestore.MemoryFileStore"/>
		<filestore id="org.gramar.filestore.ZipFileStore"  		impl="org.gramar.filestore.ZipFileStore"/>
	
	</filestores>

	<adaptors>
	
		<adaptor id="org.gramar.adaptor.GramarXmlAdaptor"  	impl="org.gramar.adaptor.GramarXmlAdaptor"/>
		<adaptor id="org.gramar.adaptor.GramarCsvAdaptor"  	impl="org.gramar.adaptor.GramarCsvAdaptor"/>
		<adaptor id="org.gramar.adaptor.GramarTsvAdaptor"  	impl="org.gramar.adaptor.GramarTsvAdaptor"/>
	
	</adaptors>

</extension>